{"title":"5 多重背包2","uid":"6d915df24433f6304d7bd51f422e5996","slug":"5 多重背包2","date":"2025-03-04T16:00:00.000Z","updated":"2025-03-07T14:19:11.775Z","comments":true,"path":"api/articles/5 多重背包2.json","keywords":null,"cover":null,"content":"<h2 id=\"题目描述\">题目描述</h2>\n<p>同[[4 多重背包1]]</p>\n<h4 id=\"数据范围\">数据范围</h4>\n<p>0&lt;N≤1000<br>\n0&lt;V≤2000<br>\n0&lt;vi,wi,si≤2000</p>\n<h5 id=\"输入样例\">输入样例</h5>\n<p>同[[4 多重背包1]]</p>\n<h5 id=\"输出样例\">输出样例</h5>\n<p>同[[4 多重背包1]]</p>\n<h2 id=\"原题链接\">原题链接</h2>\n<ul>\n<li><a href=\"https://www.acwing.com/problem/content/description/5/\">AcWing</a></li>\n</ul>\n<hr>\n<h2 id=\"解题思路\">解题思路</h2>\n<h4 id=\"考虑将多重背包问题转化为0-1背包问题求解。\">考虑将多重背包问题转化为0-1背包问题求解。</h4>\n<p>多重背包问题中，每类物品可能有s件，我们可以将其直接视为有S个(代价价值相同但性质不同的物品)，这样以来，n类物品就转化为了n * si （si不一定相等，就不展开了）个物品。那么就转化为了0-1背包问题，但是问题来了，本题的数据范围较大，n * si * m &gt; 4e8 ，一定会超时</p>\n<h4 id=\"如何优化？\">如何优化？</h4>\n<p>我们考虑不将各类物品完全展开，可以将一类物品分组，例如一类物品有11个的话，可以分成1+2+4+4 个 ，这样以来， 我们的si就从11 变为了 4 ， 复杂度可以降为logn 级别，总复杂度就可以降低到 1000 * 11 * 2000 = 2e7 ，就不会TLE了</p>\n<h4 id=\"为什么可以这么分？\">为什么可以这么分？</h4>\n<p>这种优化方式称为二进制优化。我们知道n位二进制数可以表示出 2的n次方 种状态，状态也就是我们这里的物品。所以11我们需要用4位二进制来表示，log向上取整。但其实4位二进制可以表示16重状态，有些是我们用不到的。因此最后一组的值是我们一个一个减出来的（详见代码）</p>\n<h4 id=\"为什么分组后可以按照0-1背包做，dp顺序仍然跟0-1背包一样？\">为什么分组后可以按照0-1背包做，dp顺序仍然跟0-1背包一样？</h4>\n<p>这个问题也是困扰我的一个问题，我能理解1，2，4，4 可以组合出0~11的状态，但是这里的状态组合并不一定是连续的呀，也有可能跳着，比如1+4 = 5，就隔开了2</p>\n<p>后来想明白了，可能是因为我们0-1背包直接按着一维写出来，突然就不太理解了，可以还原到二维去理解，其实不需要担心这个问题，dp在过程中已经考虑了所有的情况并且给出了当前状态的最优解了。（这是笔者自己的thinking，不太懂的可以看看参考资料里博主的描述，再看看y总的视频讲解，会有自己的理解的）</p>\n<h2 id=\"代码\">代码</h2>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e4</span><span class=\"number\">+10</span> , M = <span class=\"number\">2010</span> ;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> w[N], v[N], f[M]; <span class=\"comment\">//笔者习惯用w表示代价，v表示价值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"type\">int</span> cnt= <span class=\"number\">0</span>;<span class=\"comment\">//计数，统计拆分的组数，用于遍历</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span> ; i &lt;= n; i++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> wi,vi,ai;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;wi,&amp;vi,&amp;ai);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">1</span> ; ai - k &gt;=<span class=\"number\">0</span> ; k *= <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            w[cnt] = wi * k;</span><br><span class=\"line\">            v[cnt] = vi * k;</span><br><span class=\"line\">            ai -= k ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ai != <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            w[cnt] = ai * wi;</span><br><span class=\"line\">            v[cnt] = ai * vi;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span> ; i &lt;= cnt ; i++)&#123;<span class=\"comment\">//0-1背包的一维写法</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m ; j &gt;= w[i] ; j--)&#123;</span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span> (f[j] , f[j - w[i]] + v[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面给出Y总的写法，用vector可以不用计数</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2010</span> ;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> f[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Good</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> w,v;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tvector&lt;Good&gt; goods;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span> ; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> wi,vi,ai;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>,&amp;wi,&amp;vi,&amp;ai);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">1</span> ; ai - k &gt;=<span class=\"number\">0</span> ; k *= <span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t        goods.<span class=\"built_in\">push_back</span>(&#123;wi * k, vi * k&#125;);</span><br><span class=\"line\">            ai -= k ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ai != <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">\t\t\tgoods.<span class=\"built_in\">push_back</span>(&#123;wi * ai, vi * ai&#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> good: goods)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = m ; j &gt;= good.w ; j--)&#123;</span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span> (f[j] , f[j - good.w] + good.v);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    cout &lt;&lt; f[m];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"参考资料\">参考资料</h2>\n<ul>\n<li><a href=\"https://www.acwing.com/solution/content/20115/\">AcWing 5. 二进制优化，它为什么正确，为什么合理，凭什么可以这样分？？</a></li>\n<li><a href=\"https://www.acwing.com/solution/content/5527/\">AcWing 5. 多重背包问题 II </a></li>\n<li><a href=\"https://www.acwing.com/video/217/\">Y总视频讲解</a></li>\n</ul>\n","feature":false,"text":"题目描述 同[[4 多重背包1]] 数据范围 0<N≤1000 0<V≤2000 0<vi,wi,si≤2000 输入样例 同[[4 多重背包1]] 输出样例 ...","permalink":"/post/5 多重背包2","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"算法","slug":"算法","count":6,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":6,"path":"api/tags/动态规划.json"},{"name":"背包","slug":"背包","count":6,"path":"api/tags/背包.json"},{"name":"模板题","slug":"模板题","count":5,"path":"api/tags/模板题.json"},{"name":"medium","slug":"medium","count":1,"path":"api/tags/medium.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">题目描述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">数据范围</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%85%A5%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">输入样例</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">输出样例</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E9%A2%98%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">原题链接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%80%83%E8%99%91%E5%B0%86%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E8%BD%AC%E5%8C%96%E4%B8%BA0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E6%B1%82%E8%A7%A3%E3%80%82\"><span class=\"toc-text\">考虑将多重背包问题转化为0-1背包问题求解。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96%EF%BC%9F\"><span class=\"toc-text\">如何优化？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AF%E4%BB%A5%E8%BF%99%E4%B9%88%E5%88%86%EF%BC%9F\"><span class=\"toc-text\">为什么可以这么分？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%86%E7%BB%84%E5%90%8E%E5%8F%AF%E4%BB%A5%E6%8C%89%E7%85%A70-1%E8%83%8C%E5%8C%85%E5%81%9A%EF%BC%8Cdp%E9%A1%BA%E5%BA%8F%E4%BB%8D%E7%84%B6%E8%B7%9F0-1%E8%83%8C%E5%8C%85%E4%B8%80%E6%A0%B7%EF%BC%9F\"><span class=\"toc-text\">为什么分组后可以按照0-1背包做，dp顺序仍然跟0-1背包一样？</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"尤一","slug":"blog-author","avatar":"http://ssqow3cq4.hd-bkt.clouddn.com/cat.jpg","link":"/","description":"社畜码农，热爱设计，热爱编程，热爱生活。","socials":{"github":"https://github.com/StayOne1","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"6 多重背包3","uid":"c5422bd2de84a2c9973c0e0db8b986a4","slug":"6 多重背包3","date":"2025-03-04T16:00:00.000Z","updated":"2025-03-07T14:19:30.163Z","comments":true,"path":"api/articles/6 多重背包3.json","keywords":null,"cover":null,"text":"题目描述 有 N种物品和一个容量是 V的背包。 第 i种物品最多有 si件，每件体积是 vi，价值是 wi。 求解将哪些物品装入背包，可使物品体积总和不超过背包...","permalink":"/post/6 多重背包3","photos":[],"count_time":{"symbolsCount":474,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":6,"path":"api/categories/算法.json"}],"tags":[{"name":"动态规划","slug":"动态规划","count":6,"path":"api/tags/动态规划.json"},{"name":"背包","slug":"背包","count":6,"path":"api/tags/背包.json"},{"name":"模板题","slug":"模板题","count":5,"path":"api/tags/模板题.json"},{"name":"hard","slug":"hard","count":1,"path":"api/tags/hard.json"}],"author":{"name":"尤一","slug":"blog-author","avatar":"http://ssqow3cq4.hd-bkt.clouddn.com/cat.jpg","link":"/","description":"社畜码农，热爱设计，热爱编程，热爱生活。","socials":{"github":"https://github.com/StayOne1","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/","juejin":"","customs":{}}},"feature":false},"next_post":{}}