{"name":"JAVA","slug":"JAVA","count":1,"postlist":[{"title":"JAVA设计模式之装饰模式","uid":"d8c5cdf794b98a3ee47186f592b0c059","slug":"JAVA设计模式之装饰模式","date":"2022-08-30T16:00:00.000Z","updated":"2022-08-31T16:00:00.000Z","comments":true,"path":"api/articles/JAVA设计模式之装饰模式.json","keywords":null,"cover":[],"text":"装饰模式 装饰器模式是为了在不改变原有类的结构的前提下，给一个现有的对象拓展新的功能。这种类型的设计模式属于结构性模式，它作为现有类的一个包装。 这种模式为拓展...","permalink":"/post/JAVA设计模式之装饰模式","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":1,"path":"api/categories/JAVA.json"}],"tags":[{"name":"JAVA","slug":"JAVA","count":1,"path":"api/tags/JAVA.json"}],"author":{"name":"尤一","slug":"blog-author","avatar":"img/cat.jpg","link":"/","description":"社畜码农，热爱设计，热爱编程，热爱生活。","socials":{"github":"https://github.com/StayOne1","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/","juejin":"","customs":{}}}}]}